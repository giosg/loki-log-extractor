{{- $ := . }}
{{- range $k, $v := .Values.instances }}
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ template "logscrapper.fullname" $ }}-{{ $k }}
  labels:
    {{- include "logscrapper.labels" $ | nindent 4 }}
    app.kubernetes.io/component: {{ $k }}
spec:
  schedule: {{ $v.cronSchedule }}
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            {{- include "logscrapper.selectorLabels" $ | nindent 12 }}
            app.kubernetes.io/component: {{ $k }}
        spec:
          {{- with $.Values.image.imagePullSecrets }}
          imagePullSecrets:
          {{- toYaml . | nindent 10 }}
          {{- end }}
          volumes:
          - name: gpg
            secret:
              secretName: {{ template "logscrapper.fullname" $ }}-gpg
          - name: cache
            emptyDir: {}
          containers:
          - name: logscrapper
            image: {{ $.Values.image.repository }}:{{ $.Values.image.tag }}
            imagePullPolicy: {{ $.Values.image.pullPolicy }}
            env:
            - name: LOG_ENDPOINT
              value: {{ $.Values.logEndpoint }}
            - name: START_TIME
              value: {{ $v.startTime }}
            - name: END_TIME
              value: {{ $v.endTime }}
            - name: S3_URL
              value: {{ $.Values.s3Url }}
            - name: GPG_PUBLIC_KEY_FILE
              value: "/etc/gpg/gpg_public_key.asc"
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ template "logscrapper.fullname" $ }}
                  key: awsAccessKeyId
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "logscrapper.fullname" $ }}
                  key: awsSecretAccessKey
            - name: AWS_DEFAULT_REGION
              value: {{ $.Values.awsDefaultRegion }}
            - name: PART_PATH_PREFIX
              value: "/cache"
            args: ['{{ $v.logcliQuery }}']
            volumeMounts:
            - name: gpg
              readOnly: true
              mountPath: "/etc/gpg"
            - mountPath: /cache
              name: cache
          restartPolicy: Never
{{- end }}
